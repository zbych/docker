diff --git a/pub/debug.php b/pub/debug.php
new file mode 100644
index 0000000..edc6db3
--- /dev/null
+++ b/pub/debug.php
@@ -0,0 +1,53 @@
+<?php
+/**
+ * Debug
+ */
+
+if ($_SERVER['REQUEST_METHOD'] !== 'GET' || isset($_SERVER['HTTP_X_REQUESTED_WITH'])) {
+    exit;
+}
+
+if (!isset($queryMap)) {
+    die('No debug detected');
+}
+?>
+<table id="dbg-table">
+    <?php foreach ($queryMap as $item): ?>
+        <tr>
+            <td style="width: 75px;"><pre><a href="javascript:showTrace('trace-<?= $item['hash'] ?>')">Trace</a></pre></td>
+            <td style="width: 50px;"><pre><?= $item['count'] ?></pre></td>
+            <td style="width: 100px;"><pre><?= round($item['time'] * 1000, 3) ?></pre></td>
+            <td style="width: 400px;"><textarea class="dbg-textarea-view" style="font-size:80%"><?= implode("\n", $item['blocks']) ?></textarea></td>
+            <td><textarea><?= $item['query'] ?></textarea></td>
+        </tr>
+        <tr style="display:none;" id="trace-<?= $item['hash'] ?>">
+            <td colspan="4">
+                <ul>
+                    <?php foreach($item['trace'] as $line): ?>
+                        <li><pre><?= $line ?></pre></li>
+                    <?php endforeach ?>
+                </ul>
+            </td>
+        </tr>
+    <?php endforeach ?>
+</table>
+<style>
+    #dbg-table { width: 100%; border-collapse: collapse; border-spacing: initial; }
+    #dbg-table td { padding: 5px 5px 20px 5px; margin: 0; border-bottom: 1px solid #eee; }
+    #dbg-table td pre { border: 0 none; border-radius: 0; background: transparent; padding: 0; }
+    #dbg-table td li { padding: 0; margin: 0; }
+    #dbg-table textarea { display: block; border:0; padding: 2px; width:100%; font-family: monospace; font-size:90%;}
+    #dbg-table .dbg-textarea-view { white-space:pre; overflow-wrap:normal; }
+</style>
+<script>
+    function showTrace(hash) {
+        var el = document.getElementById(hash);
+        if (!el.expanded) {
+            document.getElementById(hash).style.display = 'table-row';
+            el.expanded = true;
+        } else {
+            document.getElementById(hash).style.display = 'none';
+            el.expanded = false;
+        }
+    }
+</script>
\ No newline at end of file
diff --git a/vendor/magento/zendframework1/library/Zend/Db/Adapter/Abstract.php b/vendor/magento/zendframework1/library/Zend/Db/Adapter/Abstract.php
index 0fb6585..3ea3add 100644
--- a/vendor/magento/zendframework1/library/Zend/Db/Adapter/Abstract.php
+++ b/vendor/magento/zendframework1/library/Zend/Db/Adapter/Abstract.php
@@ -475,10 +475,15 @@ abstract class Zend_Db_Adapter_Abstract
             $bind = array($bind);
         }
 
+        $t1 = microtime(true);
+
         // prepare and execute the statement with profiling
         $stmt = $this->prepare($sql);
         $stmt->execute($bind);
 
+        $t2 = microtime(true);
+        $this->debug($sql, $t2-$t1);
+
         // return the results embedded in the prepared statement object
         $stmt->setFetchMode($this->_fetchMode);
         return $stmt;
@@ -1277,4 +1282,38 @@ abstract class Zend_Db_Adapter_Abstract
      * @return string
      */
     abstract public function getServerVersion();
+
+    /**
+     * Debug (inserted by patch)
+     * @nocommit
+     */
+    protected function debug($sql, $time)
+    {
+        global $queryMap;
+
+        if (!isset($queryMap)) {
+            $queryMap = [];
+        }
+
+        $hash = md5($sql);
+
+        if (!isset($queryMap[$hash])) {
+            $backtrace = array_map(function($item) {
+                return sprintf('%s::%s', (isset($item['class']) ? $item['class'] : $item['file']), $item['function']);
+            }, debug_backtrace());
+            $blocks = array_map(function($item) {
+                return ($item['function'] == 'fetchView') ? $item['class']: null ;
+            }, debug_backtrace());
+            $queryMap[$hash] = [
+                'hash' => $hash,
+                'count' => 0,
+                'time' => $time,
+                'query' => $sql,
+                'trace' => $backtrace,
+                'blocks' => array_filter($blocks)
+            ];
+        }
+
+        $queryMap[$hash]['count']++;
+    }
 }
